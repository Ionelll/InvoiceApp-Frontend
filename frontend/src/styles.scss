// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@import "./material-theming.scss";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$frontend-primary: mat.define-palette($md-primary, 500);
$frontend-accent: mat.define-palette($md-accent, A200, A100, A400);
$frontend-primary-dark: mat.define-palette($md-primary, 900);
$frontend-accent-dark: mat.define-palette($md-accent, A700);

// The warn palette is optional (defaults to red).
$frontend-warn: mat.define-palette($md-accent, A400);
$frontend-warn-dark: mat.define-palette($md-accent, A700);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-theme: mat.define-light-theme(
  (
    color: (
      primary: $frontend-primary,
      accent: $frontend-accent,
      warn: $frontend-warn,
    ),
  )
);
$frontend-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $frontend-primary-dark,
      accent: $frontend-accent-dark,
      warn: $frontend-warn-dark,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontend-theme);

/* You can add global styles to this file, and also import other style files */
:root {
  --clr-input-focused: #3179c71e;
  --clr-background: #f9fbff;
  --clr-primary: #2d2d2d;
  --clr-primary-light: #3179c7;
  --clr-secondary: #fefefe;
  --clr-accent-red: #ff006ab2;
  --clr-accent-green: #24d414;
}
input,
textarea,
p {
  background: transparent;
  font-family: "Roboto", sans-serif;
}
a {
  font-family: "Ubuntu", sans-serif;
}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  appearance: none;
  -moz-appearance: textfield;
}
html,
body {
  // overflow-y: scroll;
  margin: 0;
  padding: 0;

  user-select: none;
  background-color: var(--clr-background);
  // ::-webkit-scrollbar {
  //   width: 7px;
  // }
  // ::-webkit-scrollbar-track {
  //   background: var(--clr-secondary-dark);
  //   margin: 10rem 0 10rem 0;
  //   border-radius: 15px;
  // }
  // ::-webkit-scrollbar-thumb {
  //   border-radius: 15px;
  //   background: var(--clr-primary);
  // }
}
* {
  box-sizing: border-box;
}

a {
  cursor: pointer;
}
.button-full {
  all: unset;
  color: var(--clr-secondary);
  padding: 0.5em 1em;
  text-align: center;

  outline: none;
  font-family: "Poppins", sans-serif;
  font-weight: 400;
  box-shadow: 0px 0px 3px rgb(73, 74, 78);
  border-radius: 10px;
  cursor: pointer;
  white-space: nowrap;
  background-color: var(--clr-primary-light);
  transition-duration: 0.1s;
  &:active {
    box-shadow: none;
  }
}

@media print {
  html,
  body {
    background-color: white;
    color: black;
  }
}
